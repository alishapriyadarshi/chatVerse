rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read anyone's profile, can only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Conversations: Can read/write only if they are a participant.
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;
    }

    // Messages: Can read/write only if they are a participant in the conversation.
    // Guest users are limited in what they can do.
    match /conversations/{conversationId}/messages/{messageId} {
      allow read: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds[request.auth.uid] != null;
      
      // Allow create if user is a participant
      allow create: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds[request.auth.uid] != null &&
      
        // Signed-in users can send text and images
        (!isGuest() && (request.resource.data.text is string || request.resource.data.imageUrl is string)) ||
        
        // Guest users can only send a limited number of text messages
        (isGuest() && request.resource.data.imageUrl == null && messageCount(conversationId) < 10);
    }

    function isGuest() {
      return request.auth.token.firebase.sign_in_provider == 'anonymous';
    }

    function messageCount(conversationId) {
      return query.get(/databases/$(database)/documents/conversations/$(conversationId)/messages).size();
    }
  }
}
